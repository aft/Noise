<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>container = noone;
color = -1;

r = 10;

// This velocity is used by the explode function.
vx = 0;
vy = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!visible) exit;
if (container == noone) exit;

// What color is the pixel we're sitting on top of?
var spix = pbuffer_get_pixel(container.pBuffer, floor(x-container.xoffset), floor(y-container.yoffset));
var sc = pbuffer_pixel_get_a(spix);

// What color is the pixel on the flow field?
var fpix = pbuffer_get_pixel(container.fBuffer, floor(x-container.xoffset), floor(y-container.yoffset));
var fc = pbuffer_pixel_get_r(fpix);

// Where should we move?
var angle = 360 * fc / 255 * container.noiseStrength * 0.3;

// Are we within the boundaries of the image?
var onScreen = x &gt; container.xoffset &amp;&amp; x &lt; container.xoffset+container.width &amp;&amp; 
               y &gt; container.yoffset &amp;&amp; y &lt; container.yoffset+container.height;
var isSolid = (sc == 255);

// If we're on top of a black pixel, grow. If not, shrink.
if (isSolid) r += container.growthSpeed;
else r -= container.growthSpeed;

r = clamp(r, container.minSize, container.maxSize);
if (r == 0) {
    x = container.xoffset + container.width * random(1);
    y = container.yoffset + container.height * random(1);
    switch (-depth) {
        case 0: color = container.color1; break;
        case 1: color = container.color2; break;
        case 2: color = container.color3; break;
        case 3: color = container.color4; break;
    }
}

// This velocity is used by the explode function.
vx *= 0.5;
vy *= 0.5;

// Change our position based on the flow field and our
// explode velocity.
x += dcos(angle) * container.pSpeed + vx;
y += -dsin(angle) * container.pSpeed + vy;

// If we're off the screen, go over to other side
if (x &lt; container.xoffset) x = container.xoffset + container.width * random(1);
if (x &gt; container.xoffset + container.width) x = container.xoffset + container.width * random(1);
if (y &lt; container.yoffset) y = container.yoffset + container.height * random(1);
if (y &gt; container.yoffset + container.height) y = container.yoffset + container.height * random(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (container == noone) exit;
if (r == 0) exit;

// Draw the circle.
draw_set_color(color);
draw_set_alpha(container.pAlpha);
draw_circle(x, y, r, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

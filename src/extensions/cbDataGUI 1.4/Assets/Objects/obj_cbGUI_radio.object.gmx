<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cbGUI_radio</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_cbGUI_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

_type = 3;

value = false;
group = 0;
name  = undefined;
label = undefined;

disabled = false;
_onFocus = false;
_changed = false;

// sprite properties
sprite_index = spr_cbGUI_radio;
pressed_sprite_index = spr_cbGUI_radio_checked;
tick_sprite_index = spr_cbGUI_radio_tick;

// colors
c_text          = make_color_rgb(40, 40, 40);
c_text_disabled = make_color_rgb(80, 80, 80);
c_focused       = make_color_rgb(0, 144, 255);

_scr_radio_calcsizes();

// Inherited stuff
// font = cbGUIFont;
// halign = fa_left;
// valign = fa_middle;

onChangeCallbackScript = undefined;
_oCargs = undefined;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// step
if (disabled) exit; // skip if disabled
if (!visible) exit;
//if (!_onFocus &amp;&amp; mouse_check_button(mb_left)) exit;

event_inherited();

_scr_cbGUI_remote_handler();
_scr_cbGUI_onChange_cb_handler();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///onChange Callback handling

if (_onFocus &amp;&amp; _changed) {
    _scr_cbGUI_onChange_cb_handler();
    _changed = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///unfocus all radios in the room
_onFocus = false;

if (disabled) exit;
if (!visible) exit;

// gui mouse
var gui_mouse_x = device_mouse_x_to_gui(0);
var gui_mouse_y = device_mouse_y_to_gui(0);

if ((rotation mod 360) != 0) {
    _nx = cos(degtorad(rotation)) * (gui_mouse_x - x) - sin(degtorad(rotation)) * (gui_mouse_y - y) + x;
    _ny = sin(degtorad(rotation)) * (gui_mouse_x - x) + cos(degtorad(rotation)) * (gui_mouse_y - y) + y;
} else {
    _nx = gui_mouse_x;
    _ny = gui_mouse_y;
}

if (position_meeting(_nx, _ny, self) &amp;&amp; !disabled &amp;&amp; !_onFocus) {
    if (scr_cbGUI_mouse(true)) {
        _scr_cbGUI_setactive();
        // toggle value
        _scr_radio_togglevalue();
    }
}

// changed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// image 0 - normal
// image 1 - focus
// image 2 - disabled

var textCol;
if (_onFocus) {
    image_index = 1;
    textCol = c_focused;
} else if (disabled) {
    image_index = 2
    textCol = c_text_disabled;
} else {
    image_index = 0;
    textCol = c_text;
}


d3d_transform_set_identity();
d3d_transform_set_rotation_z(rotation);
d3d_transform_add_translation(x, y, 0);
   
    // draw checkbox
    var spr = sprite_index;
    if (value) spr = pressed_sprite_index;
    draw_sprite_ext(spr, image_index, 0, 0, 1, 1, 0, c_white, alpha);
    
    // draw tick
    if (value) {
        draw_sprite_ext(tick_sprite_index, image_index, 
                        sprite_width / 2, 
                        sprite_height / 2, 
                        1, 1, 0, c_white, alpha);
    }

    // Draw label
    if (!is_undefined(label)) {
        draw_set_font(font);
        draw_set_halign(halign);
        draw_set_valign(valign);
        draw_set_color(textCol);
        draw_set_alpha(alpha);
        draw_text(_leftPadding, _topPadding, label);
    }
/*    
    // debug
    draw_set_font(cbGUIDebugFont);
    draw_set_colour(c_black);
    draw_set_halign(fa_left);
    draw_text(0, 34, "v:"+string(value)+" g:" + string(group));    
*/
d3d_transform_set_identity();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Do nothing

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///keyboard interactions
event_inherited();

if (disabled) exit; // skip if disabled
if (!visible) exit;
if (!_onFocus) exit; // skip if not on focus

var k = keyboard_lastkey;

switch (k) {

    case (vk_escape): 
        // cancel
        _onFocus = false;
        // changed
        break;

                
    case (vk_space):
        // toggle value
        _scr_radio_togglevalue();
        break;

}

keyboard_lastkey = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
